name: CI-CD Pipeline
 
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      
jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

  install_dependencies:
    runs-on: ubuntu-latest
    needs: prepare 
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Install dependencies
        run: npm install

  build:
   runs-on: ubuntu-latest
   needs: install_dependencies
   steps:
     - name: Check out code
       uses: actions/checkout@v2
     - name: Build application
       run: |
        cd sample-nodejs-app
        npm run build

        
  sonar_scan:
   runs-on: ubuntu-latest
   needs: build
   steps:
    - name: Check out code
      uses: actions/checkout@v2
    - name: sonar
      uses: SonarSource/sonarcloud-github-action@v3.1.0
      with:
          args: >
            -Dsonar.projectKey=Felipe-Janazi_amazon-ecs-demo-with-node-express
            -Dsonar.organization=felipe-janazi
            -Dsonar.sources=.
            -Dsonar.host.url=https://sonarcloud.io
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}


  dockerize:
    runs-on: ubuntu-latest
    needs: sonar_scan
    steps:
      - name: Check out code
        uses: actions/checkout@v2
        
      - name: Docker Login
        uses: docker/login-action@v3.3.0
        with:
         username: janazi1
         password: ${{ secrets.PASSWORD_DOCKER_HUB }}


      - name: Build and push Docker images
        uses: docker/build-push-action@v6.9.0
        with:
         context: .
         file: ./Dockerfile
         push: true
         tags: janazi1/sonar:v1




  deploy:
    runs-on: ubuntu-latest
    needs: dockerize
    steps:
     - name: deploy to EC2 via ssh
       uses: appleboy/ssh-action@v0.1.7
       with:
         host: ${{ secrets.EC2_HOST }}
         username: ubuntu
         key: ${{ secrets.EC2_SSH_KEY }}
         script: |
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/sonar:v1
            sudo docker run -d -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/sonar:v1




